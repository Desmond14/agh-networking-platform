<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http auto-config="true" use-expressions="true" access-denied-page="/">
        <intercept-url pattern="/welcome*" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/offers/*" access="hasRole('ROLE_USER')"/>
        
        <form-login login-page="/login" default-target-url="/welcome"
                    authentication-failure-url="/loginfailed"/>
        <logout logout-success-url="/logout"/>
    </http>

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider"/>
        <!--<authentication-provider>-->
            <!--<jdbc-user-service data-source-ref="traderbookDataSource"-->
                               <!--users-by-username-query="select username, password, enabled from users where username=?"-->
                               <!--authorities-by-username-query="select u.username, ur.authority from users u, user_roles ur where u.user_id = ur.user_id and u.username =? "/>-->
        <!--</authentication-provider>-->
    </authentication-manager>

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customUserDetailsService"/>
        <!--<beans:property name="passwordEncoder" ref="passwordEncoder"/>-->
        <!--<beans:property name="saltSource" ref="saltSource"/>-->

    </beans:bean>

    <!--<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">-->
        <!--<beans:constructor-arg value="256"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">-->
        <!--<beans:property name="userPropertyToUse" value="username"/>-->
    <!--</beans:bean>-->

    <beans:bean id="customUserDetailsService"
                class="com.io.traderbook.service.CustomUserDetailsService"/>

</beans:beans>